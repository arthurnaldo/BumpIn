rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && request.auth.uid == userId;
      allow delete: if request.auth != null && request.auth.uid == userId;
      
      match /connections/{connectionId} {
        allow read: if request.auth != null && request.auth.uid == userId &&
          !exists(/databases/$(database)/documents/users/$(connectionId)/blockedUsers/$(request.auth.uid)) &&
          !exists(/databases/$(database)/documents/users/$(request.auth.uid)/blockedUsers/$(connectionId));
        allow write: if request.auth != null && request.auth.uid == userId;
      }
      
      match /connectionRequests/{requestId} {
        allow read: if request.auth != null && request.auth.uid == userId;
        allow write: if request.auth != null;
      }
      
      match /blockedUsers/{blockedId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }
    
    match /cards/{cardId} {
      allow read: if request.auth != null && (
        resource.data.userId == request.auth.uid ||
        exists(/databases/$(database)/documents/users/$(request.auth.uid)/connections/$(resource.data.userId))
      );
      allow write: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    match /{path=**}/connectionRequests/{document} {
      allow read: if true;
      allow write: if true;
    }
    
    indexes {
      match /connectionRequests {
        allow read: if true;
        
        match /composite {
          allow read: if true;
          
          match /{composite} {
            allow read: if true;
            
            match /{document=**} {
              allow read: if true;
            }
          }
        }
      }
    }
  }
} 